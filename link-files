#!/usr/bin/env bash
BASE_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

exisitng_links=''

function do_link(){
    if [ -e $2 ] || [ -d $2 ] || [ -L $2 ]; then
        exisitng_links=$exisitng_links"\nunlink $2 # -> $(readlink $2)"
    else
        echo "ln -s $1 $2"
        ln -s $1 $2
    fi
}

function link_to_home(){
    do_link "$BASE_DIR/$1" "$HOME/.$1"
}

function create_dir(){
	if [ ! -e $1 ]
	then
        echo "mkdir -p $1"
		mkdir $1
	fi
}


link_to_home ackrc
link_to_home gitconfig
link_to_home gitignore_global
link_to_home tmux.conf
link_to_home ctags
link_to_home emacs
link_to_home pryrc
link_to_home agignore
link_to_home rubocop.yml
link_to_home psqlrc

link_to_home vim
link_to_home vimrc

touch ~/.hushlogin

create_dir ~/.ssh
do_link "$BASE_DIR/ssh_config" "$HOME/.ssh/config"

create_dir ~/.config/fish
do_link "$BASE_DIR/config.fish" "$HOME/.config/fish/config.fish"

create_dir ~/.ipython/profile_default
do_link "$BASE_DIR/ipython_config.py" "$HOME/.ipython/profile_default/ipython_config.py"

link_to_home aspell.EN.pws
cp "$BASE_DIR/aspell.conf" "$HOME/.aspell.conf"
echo "extra-dicts $HOME/.aspell.EN.pws" >> "$HOME/.aspell.conf"

if [ "$exisitng_links" != '' ]; then
	echo
	echo "The following config files were found to already exist, you may wish to remove them:"
	echo -e "$exisitng_links"
	echo
fi
